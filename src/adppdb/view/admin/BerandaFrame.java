/* 
 * Copyright (C) 2019 samsul
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package adppdb.view.admin;

import adppdb.controller.OperatorController;
import adppdb.database.JDBCAdapter;
import adppdb.model.Admin;
import adppdb.view.main.MainFrame;
import adppdb.view.admin.BuatOperatorFrame;
import com.formdev.flatlaf.IntelliJTheme;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.awt.Dialog;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samsul
 */
public class BerandaFrame extends javax.swing.JFrame {

    private static Admin admin;
    private OperatorController OC;
    private DefaultTableModel model;
    private String data;
    private String ambil;

    /**
     * Creates new form UserFrame
     */
    public BerandaFrame(Admin admin) {
        // Inisialisasi tema
        IntelliJTheme.install(MainFrame.class.getResourceAsStream("/adppdb/themes/Cyan.theme.json"));

        initComponents();

        salam.setText("Halo, " + admin.getNama() + "!");
        
        operatorTable.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                int selRow = operatorTable.getSelectedRow();

                Object value = operatorTable.getValueAt(selRow, 0);
                ambil = value.toString();
            }
        });

        String[] operatorTableColumnNames = {
            "Nama Lengkap",
            "Email",
            "Tanggal Dibuat",};

        model = new DefaultTableModel(null, operatorTableColumnNames);

        operatorTable.setModel(model);
        tampilDataOp();

        this.admin = admin;

        setLocationRelativeTo(null);

        // Munculkan frame utama saat frame siswa ditutup
        WindowListener exitListener = new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                BerandaFrame source = (BerandaFrame) e.getSource();

                source.dispose();
                new MainFrame().setVisible(true);
            }
        };
        addWindowListener(exitListener);
    }
    private PreparedStatement pst = null;
    private ResultSet rs = null;

    private void tampilDataOp() {
        try {
            String sql = "SELECT * from operator";
            pst = JDBCAdapter.getConnection().prepareStatement(sql);
            rs = pst.executeQuery();

            while (rs.next()) {
                Object[] hasil = {
                    rs.getString("nama"),
                    rs.getString("email"),
                    rs.getString("tanggal_dibuat")
                };
                model.addRow(hasil);
            }

        } catch (SQLException ex) {
            Logger.getLogger(BerandaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public BufferedImage getIconImage() {
        InputStream imgStream = MainFrame.class.getResourceAsStream("/adppdb/icons/weather.png");
        try {
            return ImageIO.read(imgStream);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jenisKelamin = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        operatorTable = new javax.swing.JTable();
        cariNama = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cariBt = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        hapusBt = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        salam = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dasbor Admin - ADPPDB");
        setIconImage(getIconImage());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Manajemen Operator");

        operatorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(operatorTable);

        cariNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariNamaActionPerformed(evt);
            }
        });

        jLabel11.setText("Cari Nama");

        cariBt.setText("Cari");
        cariBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariBtActionPerformed(evt);
            }
        });

        jButton3.setText("Buat");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        hapusBt.setText("Hapus");
        hapusBt.setEnabled(false);
        hapusBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtActionPerformed(evt);
            }
        });

        delete.setText("Hapus");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        salam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        salam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salam.setText("Halo, John!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(hapusBt))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(32, 32, 32)
                            .addComponent(cariNama, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cariBt))))
                .addGap(28, 28, 28))
            .addComponent(salam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salam)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cariNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cariBt))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapusBt)
                    .addComponent(jButton3)
                    .addComponent(delete))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        BuatOperatorFrame buatOperator = new BuatOperatorFrame(this);
        buatOperator.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cariBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariBtActionPerformed

        data = cariNama.getText();
        try {

            String sql = "SELECT * from operator where nama LIKE '" + data + "%' OR email LIKE '" + data + "%'";
            pst = JDBCAdapter.getConnection().prepareStatement(sql);
            rs = pst.executeQuery();
            DefaultTableModel tb = (DefaultTableModel) operatorTable.getModel();

            tb.setRowCount(0);
            String[] cari = new String[3];
            int i = 1;

            while (rs.next()) {
                cari[0] = rs.getString("nama");
                cari[1] = rs.getString("email");
                cari[2] = rs.getString("tanggal_dibuat");
                tb.addRow(cari);
                i++;
            }
            rs.close();
            cariNama.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(BerandaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cariBtActionPerformed

    public JTextField getCariNama() {
        return cariNama;
    }

    private void cariNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariNamaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cariNamaActionPerformed

    private void hapusBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_hapusBtActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) operatorTable.getModel();

        int row = operatorTable.getSelectedRow();

        if (row >= 0) {
            int ok = JOptionPane.showConfirmDialog(null, "Yakin Mau Hapus?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (ok == 0) {
                try {
                    String sql = "delete from operator where nama='" + ambil + "'";
                    pst = JDBCAdapter.getConnection().prepareStatement(sql);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Data Sukses");

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Delete Data Gagal");
                }

                model.removeRow(row);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BerandaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BerandaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BerandaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BerandaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BerandaFrame(admin).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cariBt;
    private javax.swing.JTextField cariNama;
    private javax.swing.JButton delete;
    private javax.swing.JButton hapusBt;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup jenisKelamin;
    private javax.swing.JTable operatorTable;
    private javax.swing.JLabel salam;
    // End of variables declaration//GEN-END:variables
}
