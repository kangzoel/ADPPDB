/* 
 * Copyright (C) 2019 samsul
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package adppdb.view.peserta;

import adppdb.controller.DataNilaiController;
import adppdb.database.JDBCAdapter;
import adppdb.model.Peserta;
import hu.kazocsaba.imageviewer.ImageViewer;
import java.awt.Component;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author samsul
 */
public class DataNilaiInternalFrame extends javax.swing.JInternalFrame {

    private Peserta peserta;
    DataNilaiController controller;

    /**
     * Creates new form DataNilaiInternalFrame
     */
    public DataNilaiInternalFrame(Peserta peserta) {
        initComponents();

        this.peserta = peserta;
        this.controller = new DataNilaiController(this);

        if (peserta.getDataNilai().getSkhun() != null) {
            tampilSkhun();
        }
    }

    public Peserta getPeserta() {
        return peserta;
    }

    public void setPeserta(Peserta peserta) {
        this.peserta = peserta;
    }

    public JPanel getPanelSkhun() {
        return panelSkhun;
    }
    
    public void tampilSkhun() {
        ImageViewer imageViewer = new ImageViewer(peserta.getDataNilai().getSkhun());

        panelSkhun.setPreferredSize(new java.awt.Dimension(405, 430));
        javax.swing.GroupLayout panelSkhunLayout = new javax.swing.GroupLayout(panelSkhun);
        panelSkhun.setLayout(panelSkhunLayout);
        panelSkhunLayout.setHorizontalGroup(
                panelSkhunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imageViewer.getComponent())
                        .addGap(0, 405, Short.MAX_VALUE)
        );
        panelSkhunLayout.setVerticalGroup(
                panelSkhunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imageViewer.getComponent())
                        .addGap(0, 268, Short.MAX_VALUE)
        );
    }

    public boolean dataNilaiIsExists() {
        boolean toReturn = false;

        try {
            PreparedStatement stmt = JDBCAdapter.getConnection()
                    .prepareStatement("SELECT COUNT(*) as count FROM data_nilai WHERE nisn_peserta = ?");

            stmt.setString(1, peserta.getNisn());

            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                toReturn = rs.getString("count").equals("0") ? false : true;
            }

        } catch (SQLException ex) {
            Logger.getLogger(DataNilaiInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        return toReturn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uploadSkhun = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        panelSkhun = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        uploadSkhun.setText("Upload SKHUN");
        uploadSkhun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadSkhunActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Data Nilai");

        panelSkhun.setMaximumSize(new java.awt.Dimension(405, 430));
        panelSkhun.setMinimumSize(new java.awt.Dimension(405, 430));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Anda belum mengupload SKHUN");

        javax.swing.GroupLayout panelSkhunLayout = new javax.swing.GroupLayout(panelSkhun);
        panelSkhun.setLayout(panelSkhunLayout);
        panelSkhunLayout.setHorizontalGroup(
            panelSkhunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
        );
        panelSkhunLayout.setVerticalGroup(
            panelSkhunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSkhunLayout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel1)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelSkhun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uploadSkhun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(uploadSkhun, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelSkhun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadSkhunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadSkhunActionPerformed
        controller.uploadSkhun();
    }//GEN-LAST:event_uploadSkhunActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel panelSkhun;
    private javax.swing.JButton uploadSkhun;
    // End of variables declaration//GEN-END:variables
}
